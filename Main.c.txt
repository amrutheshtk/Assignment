#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>

#define MAX_BUFFER_SIZE 1024
#define PRINT_THRESHOLD 50

// Global buffer
unsigned char buffer[MAX_BUFFER_SIZE];
int bufferIndex = 0;

// Function to generate random data
void generateRandomData() {
    int bytesToAdd = rand() % 6;  // Random number of bytes (0 to 5)
    for (int i = 0; i < bytesToAdd; i++) {
        if (bufferIndex < MAX_BUFFER_SIZE) {
            buffer[bufferIndex++] = rand() % 256;  // Random byte (0 to 255)
        }
    }
}

// Function to print and clear data
void printAndClearBuffer() {
    if (bufferIndex >= PRINT_THRESHOLD) {
        printf("Printing latest %d bytes:\n", PRINT_THRESHOLD);
        for (int i = bufferIndex - PRINT_THRESHOLD; i < bufferIndex; i++) {
            printf("%02X ", buffer[i]);
        }
        printf("\n");

        // Remove the printed bytes
        memmove(buffer, buffer + (bufferIndex - PRINT_THRESHOLD), PRINT_THRESHOLD);
        bufferIndex -= PRINT_THRESHOLD;
    }
}

int main() {
    srand(time(NULL));  // Seed for random number generation

    int seconds = 0;
    while (1) {
        sleep(1);  // Simulate timer interrupt every second
        generateRandomData();

        seconds++;
        if (seconds % 10 == 0) {  // Every 10 seconds
            printAndClearBuffer();
        }
    }

    return 0;
}
